/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/SelectEnhance.ts":
/*!****************************************!*\
  !*** ./src/assets/js/SelectEnhance.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SelectEnhance)\n/* harmony export */ });\n/* harmony import */ var cash_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cash-dom */ \"cash-dom\");\n/* harmony import */ var cash_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cash_dom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _core_Store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/Store */ \"./src/assets/js/core/Store.ts\");\n/* harmony import */ var _core_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/constants */ \"./src/assets/js/core/constants.ts\");\n/* harmony import */ var _util_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/helpers */ \"./src/assets/js/util/helpers.ts\");\n\n\n\n\nconst VERSION = \"2.4.1\";\nconst EVENT_NAME = 'selectEnhance';\nconst DATA_NAME = 'SelectEnhance';\nconst DEFAULTS = {\n    cssPrefix: 'select-enhance',\n    mobileNative: true,\n    emptyValAsPlaceholder: true,\n    focusIn: _util_helpers__WEBPACK_IMPORTED_MODULE_3__.noop,\n    focusOut: _util_helpers__WEBPACK_IMPORTED_MODULE_3__.noop,\n    beforeChange: _util_helpers__WEBPACK_IMPORTED_MODULE_3__.noop,\n    afterChange: _util_helpers__WEBPACK_IMPORTED_MODULE_3__.noop,\n    blurDuration: 250,\n    typeAheadDuration: 500,\n    observeSelectbox: true\n};\n// wrap the select first\nconst mobileOS = (0,_util_helpers__WEBPACK_IMPORTED_MODULE_3__.isMobileOS)();\n// helper\nconst getSelectedOptNode = ($el) => $el.find('option').filter(function () { return this.selected; })[0];\n// global private state props\nlet to, $currSelectEnhance = null, listPosTop = true, registerEventScroll = false, currSelectInstance = null;\nclass SelectEnhance {\n    $select;\n    select;\n    params;\n    index;\n    id;\n    selectId;\n    isReadOnly;\n    $label;\n    $selectEnhance;\n    $textInput;\n    textInput;\n    $selectList;\n    optionSet;\n    optionsShown;\n    selectboxObserver;\n    selectListBoxInFullView;\n    keyedInput;\n    static defaults = DEFAULTS;\n    static get version() {\n        return VERSION;\n    }\n    constructor(element, options, index) {\n        const s = this;\n        s.index = index;\n        s.$select = cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(element);\n        s.select = element;\n        s.id = s.$select.attr('id') || s.$select.attr('name') || 'select_enhance_' + index;\n        s.selectId = s.id + '_enhance';\n        s.$label = cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(`label[for=\"${s.id}\"]`);\n        s.optionSet = new WeakMap();\n        s.optionsShown = false;\n        s.selectboxObserver;\n        s.selectListBoxInFullView = true;\n        s.keyedInput = \"\";\n        s.isReadOnly = typeof s.$select.attr('readonly') === \"string\";\n        if (s.select.multiple) {\n            console.warn(`The SelectEnhance plugin doesn't support multiple selections.`);\n        }\n        if (s.$label.length) {\n            s.$label.attr({ id: s.selectId + '_lbl' });\n        }\n        const dataOptions = (0,_util_helpers__WEBPACK_IMPORTED_MODULE_3__.getDataOptions)(element, EVENT_NAME);\n        s.params = cash_dom__WEBPACK_IMPORTED_MODULE_0___default().extend({}, SelectEnhance.defaults, options, dataOptions);\n        s.setUpSelectHtml();\n        if (mobileOS && s.params.mobileNative || s.isReadOnly) {\n            s.mobileOnlyIfNavite();\n        }\n        else {\n            // \n            // attach events\n            // \n            if (s.params.observeSelectbox) {\n                s.selectInputMutationObserver();\n            }\n            s.eventLabelClick();\n            s.eventKeyboardSearch();\n            s.eventShowOptions();\n            s.eventOptionClick();\n            s.eventSelectToggle();\n            s.eventArrowKeys();\n            s.observeSelectListBoxInFullView();\n            SelectEnhance.eventScrollGetListPosition();\n        }\n        return s;\n    }\n    mobileOnlyIfNavite() {\n        const s = this;\n        let prevElSelectedVal = getSelectedOptNode(s.$select);\n        s.$select.on('mouseup.' + EVENT_NAME, 'option', function (e) {\n            if (!this.isSameNode(prevElSelectedVal)) {\n                s.params.beforeChange(s.$select);\n            }\n        }).on('change.' + EVENT_NAME, function (e) {\n            s.params.afterChange(s.$select);\n            prevElSelectedVal = getSelectedOptNode(s.$select);\n        });\n    }\n    // Events \n    blurSelect() {\n        const s = this;\n        s.$selectEnhance.addClass(s.params.cssPrefix + '--blurring');\n        s.$selectEnhance.removeClass(s.params.cssPrefix + '--focused');\n        s.$textInput.attr({ 'aria-expanded': 'false' });\n        setTimeout(() => {\n            s.$selectEnhance.removeClass(s.params.cssPrefix + '--blurring');\n            $currSelectEnhance = null;\n            currSelectInstance = null;\n            s.optionsShown = false;\n            s.params.focusOut(s.$select);\n        }, s.params.blurDuration);\n    }\n    setSelectionState($btn, doBlur = true) {\n        const s = this;\n        const { cssPrefix } = s.params;\n        const selectedOpt = s.optionSet.get($btn[0]);\n        const newSelectedState = !selectedOpt.selected;\n        s.params.beforeChange(s.$select);\n        selectedOpt.selected = true;\n        s.params.afterChange(s.$select);\n        s.$selectEnhance.find('.' + cssPrefix + '__list-btn[aria-selected]').attr({ 'aria-selected': 'false' });\n        $btn.attr({ 'aria-selected': newSelectedState + '' });\n        s.$textInput.attr({ 'aria-activedescendant': $btn[0].id });\n        // add a class whether there is an input value or not\n        s.$selectEnhance.toggleClass(cssPrefix + '--empty-val', !selectedOpt.value.trim());\n        s.select.dispatchEvent(new Event('change'));\n        if (s.params.emptyValAsPlaceholder && selectedOpt.value.trim() === '') {\n            s.$textInput.val('').attr({ placeholder: selectedOpt.text });\n        }\n        else {\n            s.$textInput.val(selectedOpt.text);\n        }\n        if (doBlur) {\n            s.textInput.focus();\n            s.blurSelect();\n        }\n        else {\n            $btn[0].focus();\n        }\n    }\n    eventLabelClick() {\n        const s = this;\n        s.$label.on('click.' + EVENT_NAME, function (e) {\n            e.preventDefault();\n            if (!s.select.disabled) {\n                s.textInput.focus();\n            }\n        });\n    }\n    showOptions(s) {\n        if (s.select.disabled) {\n            return;\n        }\n        const { cssPrefix } = s.params;\n        s.optionsShown = true;\n        s.$selectEnhance.toggleClass(cssPrefix + '--focused');\n        s.$textInput.attr({ 'aria-expanded': 'true' });\n        const $selectedBtn = s.$selectEnhance.find('.' + cssPrefix + '__list-btn[aria-selected=\"true\"]');\n        if ($selectedBtn.length) {\n            $selectedBtn[0].focus();\n        }\n        $currSelectEnhance = s.$selectEnhance;\n        currSelectInstance = s;\n        SelectEnhance.getListPosition();\n        s.params.focusIn(s.$select);\n    }\n    eventShowOptions() {\n        const s = this;\n        const { cssPrefix } = s.params;\n        s.$selectEnhance.on('click.' + EVENT_NAME, '.' + cssPrefix + '__enable-text', (e) => {\n            if (s.select.disabled) {\n                return;\n            }\n            s.showOptions(s);\n        });\n        // Only works on keydown event\n        s.$textInput.on('keydown.' + EVENT_NAME, function (e) {\n            if ((e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.down || e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.up) && !s.optionsShown) {\n                s.showOptions(s);\n                e.preventDefault();\n            }\n        });\n        s.$selectList.on('keypress.' + EVENT_NAME, '.' + cssPrefix + '__list-btn', function (e) {\n            if (e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.enter ||\n                e.code === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.space && s.keyedInput.trim() === '') {\n                s.setSelectionState(cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(document.activeElement));\n                s.blurSelect();\n                s.textInput.focus();\n                e.preventDefault();\n            }\n        });\n        s.$textInput.on('keypress.' + EVENT_NAME, function (e) {\n            if (e.key !== _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.tab || e.shiftKey && e.key !== _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.tab) {\n                e.preventDefault();\n            }\n            if (e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.enter ||\n                e.code === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.space && s.keyedInput.trim() === '' ||\n                e.ctrlKey && e.altKey && e.shiftKey && _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.space === e.code) {\n                s.showOptions(s);\n            }\n        });\n    }\n    eventOptionClick() {\n        const s = this;\n        s.$selectEnhance.on('click.' + EVENT_NAME, '.' + s.params.cssPrefix + '__list-btn', function (e) {\n            e.preventDefault();\n            s.$selectEnhance.removeClass(s.params.cssPrefix + '--focused');\n            s.$textInput.attr({ 'aria-expanded': 'false' });\n            s.setSelectionState(cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(this));\n        });\n    }\n    eventSelectToggle() {\n        const s = this;\n        s.$selectEnhance.on('focusin.' + EVENT_NAME, function (e) {\n            const closeEvent = 'click.close_' + s.selectId + EVENT_NAME;\n            cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(document.body).off(closeEvent).on(closeEvent, function (e) {\n                setTimeout(() => {\n                    const ae = document.activeElement;\n                    const aeIsInSelectEnhance = (ae && !s.$selectEnhance.has(ae).length);\n                    if (aeIsInSelectEnhance || s.$selectEnhance[0].isSameNode(ae)) {\n                        s.blurSelect();\n                        cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(document.body).off(closeEvent);\n                    }\n                }, 100);\n            });\n        });\n    }\n    eventKeyboardSearch() {\n        const s = this;\n        let keyInputTo = null;\n        let changedTo = null;\n        let keyedFound = [];\n        s.$selectEnhance.on('keypress.' + EVENT_NAME, function (e) {\n            if (s.select.disabled) {\n                return;\n            }\n            const keyCurr = (e.key.length === 1 ? e.key : '');\n            s.keyedInput += keyCurr;\n            clearTimeout(keyInputTo);\n            keyInputTo = setTimeout(() => {\n                s.keyedInput = \"\";\n            }, s.params.typeAheadDuration);\n            if (s.keyedInput.trim()) {\n                const rgx = RegExp('^' + s.keyedInput.trim(), 'i');\n                keyedFound = [].slice.call(s.select.getElementsByTagName('option')).filter((el) => rgx.test(el.text));\n                if (keyedFound.length) {\n                    clearTimeout(changedTo);\n                    changedTo = setTimeout(() => {\n                        s.setSelectionState(s.optionSet.get(keyedFound[0]), false);\n                    }, 100);\n                }\n            }\n        });\n    }\n    eventArrowKeys() {\n        const s = this;\n        s.$selectEnhance.on('keydown.navigate_' + EVENT_NAME, function (e) {\n            if (s.select.disabled) {\n                return;\n            }\n            if (e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.down) {\n                if (!s.textInput.isSameNode(document.activeElement)) {\n                    e.preventDefault();\n                }\n                s.nextOptionButton('next');\n            }\n            if (e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.up) {\n                e.preventDefault();\n                s.nextOptionButton('prev');\n            }\n            if (e.key === _core_constants__WEBPACK_IMPORTED_MODULE_2__.KEYS.esc && $currSelectEnhance) {\n                s.blurSelect();\n                s.textInput.focus();\n            }\n        });\n    }\n    //  build the HTML for it\n    setUpSelectHtml() {\n        const s = this;\n        const $selectEnhance = cash_dom__WEBPACK_IMPORTED_MODULE_0___default()('<div />').attr({\n            class: s.params.cssPrefix,\n            id: s.selectId + '_wrap'\n        });\n        const $textInput = cash_dom__WEBPACK_IMPORTED_MODULE_0___default()('<input>').attr({\n            type: 'text',\n            class: s.params.cssPrefix + '__enable-text',\n            role: \"combobox\",\n            'aria-controls': s.selectId + '_listbox',\n            'aria-labelledby': s.selectId + '_lbl',\n            'aria-autocomplete': 'list',\n            'aria-expanded': 'false',\n            id: s.selectId + '_input'\n        });\n        s.$select.wrap($selectEnhance);\n        // jQuery, elements need to be bound to the DOM before they\n        // can have events attached to them. So this is the solution\n        s.$selectEnhance = s.$select.parent();\n        if (mobileOS && s.params.mobileNative || s.isReadOnly) {\n            // exit if its a mobile device after wrapping for styling\n            return;\n        }\n        $textInput.insertAfter(s.$select);\n        s.$select.attr({ tabindex: '-1', 'aria-hidden': 'true' });\n        // jQuery, elements need to be bound to the DOM before they\n        // can have events attached to them. So this is the solution\n        s.$textInput = s.$select.parent().find('#' + s.selectId + '_input');\n        s.textInput = s.$textInput[0];\n        SelectEnhance.buildOptionsList(s);\n    }\n    static buildOptionsList(s, $selectList) {\n        const { cssPrefix } = s.params;\n        const optGroup = s.select.getElementsByTagName('optgroup');\n        const hasOptGroup = !!optGroup.length;\n        const $optGroupWm = new WeakMap();\n        if (hasOptGroup) {\n            for (let i = 0, l = optGroup.length; i < l; i++) {\n                const group = optGroup[i];\n                $optGroupWm.set(group, cash_dom__WEBPACK_IMPORTED_MODULE_0___default()('<div/>').attr({\n                    class: cssPrefix + '__optgroup',\n                    role: 'group',\n                    label: group.label || \"\"\n                }).append(cash_dom__WEBPACK_IMPORTED_MODULE_0___default()('<span>').attr({\n                    class: cssPrefix + '__optgroup-label',\n                    'aria-hidden': 'true'\n                }).text(group.label || \"\")));\n            }\n        }\n        const options = s.select.getElementsByTagName('option');\n        s.$selectList = $selectList ? $selectList : cash_dom__WEBPACK_IMPORTED_MODULE_0___default()('<div>').attr({\n            class: cssPrefix + '__list',\n            role: 'listbox',\n            id: s.selectId + '_listbox',\n            'aria-label': s.$label.text() || ''\n        });\n        const optId = s.selectId || 'select_' + s.index;\n        for (let i = 0, l = options.length; i < l; i++) {\n            const opt = options[i];\n            const id = optId + i;\n            if (opt.hidden)\n                continue;\n            const valCssStatus = opt.value === '' ? ' ' + cssPrefix + '__list-btn--empty' : '';\n            const attrs = {\n                // type: 'button',\n                tabIndex: '0',\n                role: 'option', id,\n                'data-value': opt.value,\n                'aria-selected': opt.selected + '',\n                disabled: opt.disabled ? 'disabled' : null,\n                class: cssPrefix + '__list-btn' + valCssStatus\n            };\n            const $btn = cash_dom__WEBPACK_IMPORTED_MODULE_0___default()('<div/>').attr(attrs).text(opt.textContent);\n            s.optionSet.set($btn[0], opt);\n            s.optionSet.set(opt, $btn);\n            // append to list or optgroup\n            hasOptGroup && opt.parentElement.nodeName.toUpperCase() === 'OPTGROUP' ?\n                $optGroupWm.get(opt.parentElement).append($btn) :\n                s.$selectList.append($btn);\n            if (opt.selected) {\n                s.$textInput.attr({ 'aria-activedescendant': id });\n                s.$selectEnhance.toggleClass(cssPrefix + '--empty-val', !opt.value.trim());\n                if (s.params.emptyValAsPlaceholder && opt.value.trim() === '') {\n                    s.$textInput.val('');\n                    s.$textInput.attr({ placeholder: opt.text });\n                }\n                else {\n                    s.$textInput.val(opt.text);\n                }\n            }\n        }\n        if (hasOptGroup) {\n            for (let i = 0, l = optGroup.length; i < l; i++) {\n                const group = optGroup[i];\n                s.$selectList.append($optGroupWm.get(group));\n            }\n        }\n        s.$selectList.insertAfter(s.$textInput);\n    }\n    nextOptionButton(dir) {\n        const s = this;\n        const ae = document.activeElement;\n        const $btnList = s.$selectList.find('.' + s.params.cssPrefix + '__list-btn');\n        const btnLength = $btnList.length;\n        if (btnLength && s.textInput.isSameNode(ae)) {\n            $btnList.eq(dir === 'next' ? 0 : btnLength - 1)[0].focus();\n            return;\n        }\n        for (let i = 0; i < btnLength; i++) {\n            const el = $btnList[i];\n            let prevNextIndex = 0;\n            if (ae.isSameNode(el)) {\n                if (dir === 'next') {\n                    const isLast = i === btnLength - 1;\n                    prevNextIndex = isLast ? i : i + 1;\n                }\n                else {\n                    const isFirst = i === 0;\n                    prevNextIndex = isFirst ? i : i - 1;\n                }\n                $btnList.eq(prevNextIndex)[0].focus();\n                break;\n            }\n        }\n    }\n    selectInputMutationObserver() {\n        const s = this;\n        const selectNode = s.select;\n        const config = { attributes: true, childList: true, subtree: true };\n        // Callback function to execute when mutations are observed\n        const callback = function (mutationsList, observer) {\n            // Use traditional 'for loops' for IE 11\n            for (let i = 0, l = mutationsList.length; i < l; i++) {\n                const mutation = mutationsList[i];\n                if (mutation.type === 'childList') {\n                    SelectEnhance.refreshOptions(s.select);\n                }\n                else if (mutation.type === 'attributes') {\n                    s.$selectEnhance.toggleClass(s.params.cssPrefix + '--disabled', s.select.disabled);\n                }\n            }\n        };\n        // Create an observer instance linked to the callback function\n        s.selectboxObserver = new MutationObserver(callback);\n        // Start observing the target node for configured mutations\n        s.selectboxObserver.observe(selectNode, config);\n        // Later, you can stop observing\n        // s.selectboxObserver.disconnect();\n    }\n    static eventScrollGetListPosition() {\n        if (!registerEventScroll) {\n            cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(window).on('scroll.' + EVENT_NAME, () => {\n                to && clearTimeout(to);\n                to = setTimeout(SelectEnhance.getListPosition, 100);\n            });\n            registerEventScroll = true;\n        }\n    }\n    observeSelectListBoxInFullView() {\n        const s = this;\n        if (window.IntersectionObserver) {\n            const selectIntersectionObserver = new IntersectionObserver(function (selects) {\n                s.selectListBoxInFullView = selects[0].intersectionRatio === 1;\n            }, { threshold: [0, 1] });\n            s.$selectList[0] && selectIntersectionObserver.observe(s.$selectList[0]);\n        }\n    }\n    static getListPosition() {\n        if (currSelectInstance) {\n            const s = currSelectInstance;\n            const selWrapPosTop = s.$selectEnhance.offset().top;\n            const selListHeight = s.$selectList.height();\n            const listPosAndHeight = s.$selectEnhance.offset().top +\n                s.$selectEnhance.height() +\n                selListHeight;\n            const winPosAndHeight = window.scrollY + cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(window).height();\n            if (listPosAndHeight > winPosAndHeight &&\n                selWrapPosTop > selListHeight &&\n                !s.selectListBoxInFullView) {\n                s.$selectEnhance.addClass(s.params.cssPrefix + '--pos-bottom');\n                listPosTop = false;\n            }\n            else {\n                s.$selectEnhance.removeClass(s.params.cssPrefix + '--pos-bottom');\n                listPosTop = true;\n            }\n        }\n    }\n    static refreshOptions(element) {\n        cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(element).each(function () {\n            const s = (0,_core_Store__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, `${DATA_NAME}_instance`);\n            if (s) {\n                s.$selectList.empty();\n                s.optionSet = new WeakMap();\n                SelectEnhance.buildOptionsList(s, s.$selectList);\n            }\n            else {\n                console.warn(`No instance of a selectbox`, element);\n            }\n        });\n    }\n    static remove(element, plugin) {\n        cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(element).each(function () {\n            const s = plugin || (0,_core_Store__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, DATA_NAME);\n            s.$selectEnhance.off('keydown.' + EVENT_NAME);\n            s.$selectEnhance.off('keydown.navigate_' + EVENT_NAME);\n            s.$selectEnhance.off('click.' + EVENT_NAME);\n            s.$selectEnhance.off('focusout.' + EVENT_NAME);\n            s.$selectEnhance.off('blur.' + EVENT_NAME);\n            s.$label.off('click.' + EVENT_NAME);\n            cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(document.body).off('click.close_' + s.selectId + EVENT_NAME);\n            // the window event will just stay\n            s.$select.insertAfter(s.$selectEnhance);\n            s.$select.attr({ tabindex: null, 'aria-hidden': null });\n            s.$select.off('mouseup.' + EVENT_NAME);\n            s.$select.off('change.' + EVENT_NAME);\n            if (s.selectboxObserver) {\n                s.selectboxObserver.disconnect();\n            }\n            s.$selectEnhance.remove();\n            (0,_core_Store__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, DATA_NAME, null);\n        });\n    }\n}\n\n\n//# sourceURL=webpack://baseframe-js/./src/assets/js/SelectEnhance.ts?");

/***/ }),

/***/ "./src/assets/js/core/Store.ts":
/*!*************************************!*\
  !*** ./src/assets/js/core/Store.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst storeMap = new WeakMap();\nconst Store = (storeElem, key, value) => {\n    const storeRecord = storeMap.get(storeElem) || storeMap.set(storeElem, {});\n    const keyExists = Reflect.has(storeRecord, key);\n    if (keyExists) {\n        const valueIsNull = value === null;\n        if (valueIsNull) {\n            delete storeRecord[key];\n            return null;\n        }\n        if (value) {\n            storeRecord[key] = value;\n        }\n    }\n    else {\n        if (value && value !== null) {\n            storeRecord[key] = value;\n        }\n    }\n    return storeRecord[key];\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Store);\n\n\n//# sourceURL=webpack://baseframe-js/./src/assets/js/core/Store.ts?");

/***/ }),

/***/ "./src/assets/js/core/constants.ts":
/*!*****************************************!*\
  !*** ./src/assets/js/core/constants.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KEYS: () => (/* binding */ KEYS),\n/* harmony export */   PHOTO_RGX: () => (/* binding */ PHOTO_RGX)\n/* harmony export */ });\nconst KEYS = {\n    esc: 'Escape',\n    left: 'ArrowLeft',\n    right: 'ArrowRight',\n    down: 'ArrowDown',\n    up: 'ArrowUp',\n    enter: 'Enter',\n    shift: 'Shift',\n    space: 'Space',\n    tab: 'Tab'\n};\nconst PHOTO_RGX = /\\.(gif|png|jp(g|eg)|bmp|ico|webp|jxr|svg)((#|\\?).*)?$|(\\?|&|&amp;)(image|ext\\=\\.(gif|png|jp(g|eg)|bmp|ico|webp|jxr|svg))?$/i;\n\n\n//# sourceURL=webpack://baseframe-js/./src/assets/js/core/constants.ts?");

/***/ }),

/***/ "./src/assets/js/util/helpers.ts":
/*!***************************************!*\
  !*** ./src/assets/js/util/helpers.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelCase: () => (/* binding */ camelCase),\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   \"default\": () => (/* binding */ getType),\n/* harmony export */   docTop: () => (/* binding */ docTop),\n/* harmony export */   getDataOptions: () => (/* binding */ getDataOptions),\n/* harmony export */   isHidden: () => (/* binding */ isHidden),\n/* harmony export */   isMobileOS: () => (/* binding */ isMobileOS),\n/* harmony export */   isVisible: () => (/* binding */ isVisible),\n/* harmony export */   kebabCase: () => (/* binding */ kebabCase),\n/* harmony export */   noop: () => (/* binding */ noop)\n/* harmony export */ });\n/* harmony import */ var cash_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cash-dom */ \"cash-dom\");\n/* harmony import */ var cash_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cash_dom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _parseObjectFromString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parseObjectFromString */ \"./src/assets/js/util/parseObjectFromString.ts\");\n// \n// General purposed helpers\n// \n\n\nfunction getType(val) {\n    if (typeof val === 'undefined')\n        return 'undefined';\n    if (typeof val === 'object' && !val)\n        return 'null';\n    return ({}).toString.call(val).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n// visibilty\nconst isVisible = (el, visibility = false) => {\n    const vis = el.offsetParent !== null ||\n        !!(el.offsetWidth ||\n            el.offsetHeight ||\n            el.getClientRects().length);\n    if (visibility) {\n        return cash_dom__WEBPACK_IMPORTED_MODULE_0___default()(el).css('visibility') !== 'hidden' && vis;\n    }\n    else {\n        return vis;\n    }\n};\nconst getDataOptions = (el, evtName) => (0,_parseObjectFromString__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(el.dataset[evtName + 'Options']);\nconst docTop = () => document.documentElement.scrollTop || document.body.scrollTop || 0;\nconst noop = () => { };\nconst isHidden = (el) => !isVisible(el);\n// string manipulation\nconst kebabCase = (str) => str.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\\s+/g, '-').toLowerCase();\nconst camelCase = (str) => str.replace(/-./g, x => x.toUpperCase()[1]);\nconst capitalize = (str) => str.charAt(0).toLowerCase() + str.substring(1);\n// device\nconst isMobileOS = () => /Android|webOS|iPhone|iPad|iPod|Opera Mini/i.test(navigator.userAgent);\n\n\n//# sourceURL=webpack://baseframe-js/./src/assets/js/util/helpers.ts?");

/***/ }),

/***/ "./src/assets/js/util/parseObjectFromString.ts":
/*!*****************************************************!*\
  !*** ./src/assets/js/util/parseObjectFromString.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst parseObjectFromString = (options) => {\n    let retObj = null;\n    if (typeof options === 'string') {\n        retObj = JSON.parse(options.replace(/:\\s*\"([^\"]*)\"/g, function (match, p1) {\n            return ': \"' + p1.replace(/:/g, '@colon@') + '\"';\n        }).replace(/:\\s*'([^']*)'/g, function (match, p1) {\n            return ': \"' + p1.replace(/:/g, '@colon@') + '\"';\n        }).replace(/(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g, '\"$2\": ')\n            .replace(/@colon@/g, ':'));\n    }\n    return retObj;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseObjectFromString);\n\n\n//# sourceURL=webpack://baseframe-js/./src/assets/js/util/parseObjectFromString.ts?");

/***/ }),

/***/ "cash-dom":
/*!********************!*\
  !*** external "$" ***!
  \********************/
/***/ ((module) => {

module.exports = $;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/assets/js/SelectEnhance.ts");
/******/ 	
/******/ })()
;